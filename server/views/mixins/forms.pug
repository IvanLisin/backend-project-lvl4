- const getFieldName = (property) => `data[${property}]`
- const getFieldId = (property) => `data_${property}`

mixin formFor(entity = null)
  form&attributes(attributes)
    block

mixin input(entity, propertyName, labelName, errors = {})
  - propertyErrors = _.get(errors, propertyName)
  - classLine = 'form-control' + (_.isEmpty(propertyErrors) ? '' : ' is-invalid')
  - inputId = getFieldId(propertyName)
  .mb-3(class=(errors[propertyName] && 'has-danger'))
    label(
      for= inputId
    )= labelName
    input(
      id= inputId
      name=getFieldName(propertyName)
      class=classLine
      value=_.get(entity, propertyName, '')
    )&attributes(attributes)
    if !_.isEmpty(propertyErrors)
      .invalid-feedback= propertyErrors.map(({ message }) => message).join('. ')

mixin textarea(entity, propertyName, labelName)
  - propertyErrors = _.get(errors, propertyName)
  - classLine = 'form-control' + (_.isEmpty(propertyErrors) ? '' : ' is-invalid')
  - textareaId = getFieldId(propertyName)
  .mb-3
    label(
      for= textareaId
    )= labelName
    textarea(
      id=textareaId
      name=getFieldName(propertyName)
      class=classLine
      rows='3'
    )&attributes(attributes)= _.get(entity, propertyName, '')
    if !_.isEmpty(propertyErrors)
      .invalid-feedback= propertyErrors.map(({ message }) => message).join('. ')

mixin select(entity, propertyName, labelName, options, inlineStyle = false)
  - propertyErrors = _.get(errors, propertyName)
  - classLine = 'form-select' + (_.isEmpty(propertyErrors) ? '' : ' is-invalid')
  - selectId = getFieldId(propertyName)
  .mb-3(class = inlineStyle ? 'input-group' : '')
    label(
      for= selectId
      class = inlineStyle ? 'input-group-text' : ''
    )= labelName
    select(
      id=selectId
      name= getFieldName(propertyName)
      class=classLine
    )&attributes(attributes)
      option(value= null)
      each option in options
        option(
          value=option.value
          selected=entity[propertyName] === option.value
        )= option.text
    if !_.isEmpty(propertyErrors)
      .invalid-feedback= propertyErrors.map(({ message }) => message).join('. ')

// TODO: переписать
mixin submit(form = null, method = 'post')
  input(name="_method" type="hidden" value=method)
  input(class='btn btn-primary' type='submit')&attributes(attributes)

mixin buttonTo(action, method)
  form(action=action, method="post")
    input(name="_method" type="hidden" value=method)
    input(type='submit')&attributes(attributes)

mixin filter(action, method)
  .card.shadow-sm&attributes(attributes)
    .card-body.p-4
      form(action=action, method=method)
        block
        input.btn.btn-primary(type='submit' value=t('Pokazat'))
